54. Spiral Matrix
Medium

1465

458

Favorite

Share
Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

Example 1:

Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
Output: [1,2,3,6,9,8,7,4,5]
Example 2:

Input:
[
  [1, 2, 3, 4],
  [5, 6, 7, 8],
  [9,10,11,12]
]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        if(matrix==null || matrix.length==0){
            return new ArrayList<Integer>();
        }
        List<Integer> answer=new ArrayList<Integer>();
        int frow=0;
        int lrow=matrix.length-1;
        int lcol=matrix[0].length-1;
        int fcol=0;
        while(frow<=lrow && fcol<=lcol){
            //left to right
            for(int i=fcol;i<=lcol;i++){
                answer.add(matrix[frow][i]);
            }
            //right top to bottom
            for(int i=frow+1;i<=lrow;i++){
                answer.add(matrix[i][lcol]);
            }
            //bottom right to left
            if (lcol>fcol && frow<lrow){
            for(int i=lcol-1;i>fcol;i--){
                answer.add(matrix[lrow][i]);
            }
            //bottom left to top
            for(int i=lrow;i>frow;i--){
                answer.add(matrix[i][fcol]);
            }
            }
            frow++;
            lrow--;
            fcol++;
            lcol--;
        }
        return answer;
    }
}
